snippet     qq 
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-

	${1}

snippet os
	import os
	${1}

snippet docs
	"""
	File: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}
	Author: Michal Dudek
	Email: dud95@gmx.us
	Github: github.com/micdud1995
	Description: ${2}
	"""

    ${3}

snippet     cl
	class ${1:ClassName}(${2}):
		"""${3:docstring for $1}"""

		def __init__(self):
			${4}

		def __del__(self):
			${5}
		${6}

snippet     def
	def ${1:name}(${2:args}):
		${3}
snippet     defm
	def ${1:name}(self, ${2:arg}):
		${0}
snippet     ei
	elif ${1:condition}:
		${0}

snippet     el
	else:
		${0:pass}
snippet     for
	for ${1:item} in ${2:items}:
		${0}

snippet     if
	if ${1:condition}:
		${0}

snippet     ifmain
abbr        if __name__ == '__main__': ...
options     head
	if __name__ == '__main__':
		${0:pass}

snippet     try
abbr        try: ... except ...: ...
options     head
	try:
		${1:pass}
	except ${2:#:ExceptionClass}:
		${3:pass}

snippet     tryf
abbr        try: ... finally: ...
options     head
	try:
		${1:pass}
	finally:
		${2:pass}

snippet     wh
abbr        while ...: ...
options     head
	while ${1:condition}:
		${0}

snippet     with
abbr        with {func}({file}) as :
options     head
	with ${1:open}(${2:#:filename, mode}) as ${3:f}:
		${0:pass}

snippet     filter
abbr        [x for x in {list} if {condition}]
	[$1 for ${1:x} in ${2:#:list} if ${3:#:condition}]

snippet     p
options     word
	print ("${1}")
	${2}

snippet p.
abbr        print with ending sign :
options     head
	print(${1}, end=' ')
	${2}

snippet pf
abbr        print from file:
options     head
	path = "${1}"
	f = open(path)
	f.seek(0)

	# Print all lines from file
	for line in f:
		print(line)
	f.close()
	
	${2}

snippet in
	input ("${1}")
snippet intin
	int(input("${1}"))
snippet floin
	float(input("${1}"))
# Working with files
snippet touch
	f = open("${1}", 'w')
	f.close()

	${2}
snippet rmf # Remove file if exist
	myfile="${1}"

	if os.path.isfile(myfile): # if file exist
		os.remove(myfile)
	else:
		print("Error: " + myfile + " file not found")
snippet rmd # Remove dir tree
	import shutil
	shutil.rmtree("${1}")
# Loops
snippet wh
	while ${1:condition}:
		${0}
# dowh - does the same as do...while in other languages
snippet dowh
	while True:
		${1}
		if ${0:condition}:
			break

snippet rand
	random.seed()
	random.randint(${1}, ${2})
	${3}

snippet plot
	x = ${1:arguments}
	y = ${2:values}

	pylab.plot(x, y)
	pylab.title(${3:Title of plot})
	pylab.grid(True)
	pylab.show()

snippet     getattr
abbr        getattr(..., ...)
options     word
	getattr(${1:#:obj}, ${2:#:attr})

snippet     setattr
abbr        setattr(..., ...)
	setattr(${1:#:obj}, ${2:#:attr}, ${3:#:value})

snippet     hasattr
abbr        hasattr(..., ...)
options     word
	hasattr(${1:#:obj}, ${2:#:attr})

snippet     pdb
abbr        import pdb..
	import pdb; pdb.set_trace()

snippet     ipdb
abbr        import ipdb..
	import ipdb; ipdb.set_trace()
