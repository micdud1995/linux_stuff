#=================================================================
autoload -U colors zsh-mime-setup select-word-style
colors
zsh-mime-setup                  # run if executable 
setxkbmap -option ctrl:nocaps   # disable caps-lock
#=================================================================

#=================================================================
# VCS info
# autoload -Uz vcs_info
# zstyle ':vcs_info:*' enable git svn hg
# zstyle ':vcs_info:*' check-for-changes true
# zstyle ':vcs_info:*' formats "%{$fg[yellow]%}%c%{$fg[green]%}%u%{$reset_color%} [%{$fg[orange]%}%b%{$reset_color%}] %{$fg[yellow]%}%s%{$reset_color%}:%r"
# precmd() {  # run before each prompt
#   vcs_info
# }
#=================================================================

#=================================================================
# Prompt
setopt PROMPT_SUBST     # allow funky stuff in prompt
color="white"
# left prompt part
PROMPT="%{$fg[$color]%}[%{$fg[red]%}%n%{$fg[$color]%}]-%{$reset_color%}[%{$fg[red]%}%~%{$fg[$color]%}]%{$reset_color%}$ "
# right prompt part
local BAT="$(acpi | grep -o "[0-9]*%")%"
# RPROMPT="%{$fg[$color]%}[%{$fg[red]%}${BAT}%{$fg[$color]%}]-%{$fg[$color]%}[%{$fg[red]%}%m%{$fg[$color]%}]"
RPROMPT="%{$fg[$color]%}[%{$fg[red]%}${BAT}%{$fg[$color]%}]"
#=================================================================

#=================================================================
# Completion
autoload -U compinit
compinit
setopt hash_list_all            # hash everything before completion
setopt completealiases          # complete aliases
setopt always_to_end            # when completing from the middle, move the cursor to the end
setopt complete_in_word         # allow completion from within a word/phrase
setopt correct                  # spelling correction for commands
setopt list_ambiguous           # complete as much of a completion until it gets ambiguous.
#=================================================================

#=================================================================
zstyle ':completion::complete:*' use-cache on               # completion caching, use rehash to clear
zstyle ':completion:*' cache-path ~/.zsh/cache              # cache path
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'   # ignore case
zstyle ':completion:*' menu select=2                        # menu if nb items > 2
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}       # colorz !
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate # list of completers to use
#=================================================================

#=================================================================
# sections completion
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format $'\e[00;34m%d'
zstyle ':completion:*:messages' format $'\e[00;31m%d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:manuals' separate-sections true
#=================================================================

#=================================================================
zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:*:kill:*:processes' list-colors "=(#b) #([0-9]#)*=29=34"
zstyle ':completion:*:*:killall:*' menu yes select
zstyle ':completion:*:killall:*' force-list always
users=(michal root)           # because I don't care about others
zstyle ':completion:*' users $users
#=================================================================

#=================================================================
# History
HISTFILE=~/.zsh_history         # where to store zsh_history file
HISTSIZE=2048                   # big history
SAVEHIST=2048                   # big history
setopt append_history           # append
setopt hist_ignore_all_dups     # no duplicate
unsetopt hist_ignore_space      # ignore space prefixed commands
setopt hist_reduce_blanks       # trim blanks
setopt hist_verify              # show before executing history commands
setopt inc_append_history       # add commands as they are typed, don't wait until shell exit 
setopt share_history            # share hist between sessions
setopt bang_hist                # !keyword
#=================================================================

#=================================================================
# Various
setopt auto_cd                  # if command is a path, cd into it
setopt auto_remove_slash        # self explicit
setopt chase_links              # resolve symlinks
setopt correct                  # try to correct spelling of commands
setopt extended_glob            # activate complex pattern globbing
setopt glob_dots                # include dotfiles in globbing
setopt print_exit_value         # print return value if non-zero
unsetopt beep                   # no bell on error
unsetopt bg_nice                # no lower prio for background jobs
unsetopt clobber                # must use >| to truncate existing files
unsetopt hist_beep              # no bell on error in history
unsetopt hup                    # no hup signal at shell exit
unsetopt ignore_eof             # do not exit on end-of-file
unsetopt list_beep              # no bell on ambiguous completion
unsetopt rm_star_silent         # ask for confirmation for `rm *' or `rm path/*'
print -Pn "\e]0; %n@%M: %~\a"   # terminal title
#=================================================================

#=================================================================
# Bindings
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
#=================================================================

#=================================================================
# Aliases
# clear the screen
	alias c='clear'
# ls with colors
	alias ls='ls --color'
# ls witch colors and screen cleaning
    alias l="clear;ls --color -lg"
# shutdown the system
	alias off='systemctl poweroff'
# show hidden files only
	alias l.='clear;ls -d .* --color=auto -lg'
# list all folders
	alias lf='clear;ls -Gl | grep ^d'
# grep aliases
    alias grep='grep --color=auto'
# other
    alias diff='colordiff'  # requires colordiff package
    alias df='df -kTh'
    alias free='free -ht'
    alias ip='sudo ip addr show'
# aptitude aliases
    alias a="aptitude"
    alias ai="sudo aptitude install"
    alias as="aptitude search"
    alias ash="aptitude show"
    alias ap="sudo aptitude purge"
    alias upgrade='sudo aptitude update; sudo aptitude upgrade -y; sudo aptitude clean'
# show which commands you use the most
    alias freq='cut -f1 -d" " ~/.zsh_history | sort | uniq -c | sort -nr | head -n 30'
# move aliases	
    alias ..="cd ..;ls"
    alias ...="cd ../..;ls"
    alias ....="cd ../../..;ls"	
# Git aliases
    alias gs="git status -sb"
    alias gd="git diff --word-diff --color"
    alias ga="git add"
    alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
    alias gp="git push"
    alias gpl="git pull"
    alias gcl="git clone"
    alias gc="git commit"
    alias gcm="git commit -m"
    alias gch="git checkout"
    alias gb="git branch"
    alias gr="git reset" # e.g. git reset abc.txt
    alias grc="git reset --hard HEAD~1" # git reset commit
    alias gta="git tag -a -m"
# Programs aliases
    alias x="chmod +x"
    alias hist="cat ~/.zsh_history | grep"
    # up wired connection
    alias n="newsbeuter -u ~/.config/newsbeuter/urls -C ~/.config/newsbeuter/config"
    alias w="wicd-curses"
    alias cal="cal -w"
    alias nim="vim -u ~/.vimrc-minimal"
    alias s="screenfetch -c 1,15"
# Systemd aliases
    alias reb="systemctl reboot"
    alias off="systemctl poweroff"
    alias sus="systemctl suspend"
# Global aliases
    alias -g grp="| grep -i"
# Suffix aliases
    alias -s txt=vim
    alias -s log=vim
    alias -s rc=vim
    alias -s html=links
#=================================================================

#=================================================================
# Functions

#copy and go to dir
cpg (){
  if [ -d "$2" ];then
    cp $1 $2 && cd $2
  else
    cp $1 $2
  fi
}

#move and go to dir
mvg (){
  if [ -d "$2" ];then
    mv $1 $2 && cd $2
  else
    mv $1 $2
  fi
}

# Extract archives
extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

# Calculator
# usage: calc <equation>
calc() {
  if which bc &>/dev/null; then
    echo "scale=3; $*" | bc -l
  else
    awk "BEGIN { print $* }"
  fi
}
#=================================================================

#=================================================================
# Autorun commands
screenfetch -c 1,15
#=================================================================
