# Shebang. Executing bash via /usr/bin/env makes scripts more portable.
snippet qq
	#!/bin/bash

	{1}
snippet if
	if [[ ${1:condition} ${2:==} ${3} ]]; then
		${4:}
	fi
snippet elif
	elif [[ ${1:condition} ${2:==} ${3} ]]; then
		${4}
snippet for
	for (( ${1:i} = 0; $1 < ${2:count}; $2++ )); do
		${3}
	done
snippet fori
	for ${1:needle} in ${2:haystack} ; do
		${0:#statements}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${0:#statements}
	done
snippet until
	until [[ ${1:condition} ]]; do
		${0:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${0};;
	esac
snippet go
	while getopts '${1:o}' ${2:opts}
	do
		case $$2 in
		${3:o0})
			${0:#staments};;
		esac
	done
# Set SCRIPT_DIR variable to directory script is located.
snippet sdir
	SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# getopt
snippet getopt
	__ScriptVersion="${1:version}"

	#===  FUNCTION  ================================================================
	#         NAME:  usage
	#  DESCRIPTION:  Display usage information.
	#===============================================================================
	function usage ()
	{
		echo "Usage :  $${0:0} [options] [--]

	    Options:
	    -h|help       Display this message
	    -v|version    Display script version"

	}    # ----------  end of function usage  ----------

	#-----------------------------------------------------------------------
	#  Handle command line arguments
	#-----------------------------------------------------------------------

	while getopts ":hv" opt
	do
	  case $opt in

		h|help     )  usage; exit 0   ;;

		v|version  )  echo "$${0:0} -- Version $__ScriptVersion"; exit 0   ;;

		* )  echo -e "\n  Option does not exist : $OPTARG\n"
			  usage; exit 1   ;;

	  esac    # --- end of case ---
	done
	shift $(($OPTIND-1))
snippet root
	if [ \$(id -u) -ne 0 ]; then exec sudo \$0; fi

snippet fun-sh
	${1:function_name}() {
		${0:#function_body}
	}

snippet fun
	function ${1:function_name}() {
		${0:#function_body}
	}
# whiptail
snippet infobox
	whiptail --title "${1:Title}" --infobox "${2:Information}." 20 60
snippet msgbox
	whiptail --title "${1:Title}" --msgbox "${2:Message}" 20 60
snippet yesno
	whiptail --title "${1:Title}" --yesno "${2:Question}" --yes-button "Yes" no-button "No" 20 60
snippet inputbox
	whiptail --title "${1:Title}" --inputbox "${2:Question}" 20 60 "${3:Default value}" 3>&1 1>&2 2>&3
snippet passwordbox
	whiptail --title "${1:Title}" --passwordbox "${2:Enter your password: }" 20 60 3>&1 1>&2 2>&3
snippet textbox
	whiptail --textbox "${1:Text}" 20 60
snippet menu
	whiptail --title "${1:Title}" --menu "${2:Choose an option}" 20 60 16 \
	"${3:First}" 		"${4:Description}" 	\
	"${5:Second}" 		"${6:Description}" 	
snippet checklist
	whiptail --title "${1:Title}" --checklist \
	"${2:Choose an options}" 20 60 4 \
	"${3:First}" 		"${4:Description}" ${5:ON} \
	"${6:Second}" 		"${7:Desctiption}" ${8:ON}
snippet progressbar
	| whiptail --title "${1:Title}" --gauge "${2:What is doing now}" 20 60 0
