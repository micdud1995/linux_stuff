# BOOTABLE USB ====================================
dd count=1 bs=512 if=/path/to/iso of=/dev/sdx && sync
# =================================================

# LABELS ==========================================
if your label is GPT:
    parted /dev/sda
    mklabel msdos
    quit
# =================================================

# PARTITIONING ====================================
fdisk /dev/sda
    # make mbr partition table (is for BIOS, GPT is for UEFI)
    n - nowa partycja
    ...
    a - makes bootable
    p - print all partitions
    l - list of partition codes
    t - change type of partitions
        82 - swap
        83 - Linux
    d - delete partitions
    w - write changes
mkswap /dev/sdaS (S - swap partition)
swapon /dev/sdaS
mkfs.ext4 /dev/sdaR (R - /root partition)
mkfs.ext4 /dev/sdaH (H - /home partition)
mount /dev/sdaR /mnt
mkdir -p /mnt/boot
mkdir -p /mnt/home
mount /dev/sdaH /mnt/home (H - home partition)
# =================================================

# INSTALL =========================================
wifi-menu
ping -c 3 wp.pl
pacman -Sy
 
# Choose closest mirror
pacman -S reflector     
reflector --verbose -l 5 --sort rate --save /etc/pacman.d/mirrorlist

# Pacstrap script installs the base system
pacstrap /mnt base base-devel

# Generate an fstab file
genfstab -U -p /mnt >> /mnt/etc/fstab
cat /mnt/etc/fstab

# Chroot is an operation that changes the apparent root directory 
# for the current running process and their children
arch-chroot /mnt

# Regional settings for Poland
echo arch > /etc/hostname
cp /usr/share/zoneinfo/Europe/Warsaw /etc/localtime
nano /etc/locale.gen
    uncomment two lines with pl
locale-gen

# Change root password
passwd

# Install grub
pacman -S grub
grub-install /dev/sda
nano /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg

# Create an initial ramdisk environment
mkinitcpio -p linux 

# Config pacman
nano /etc/pacman.conf
    uncomment #Color
    uncomment Multilib (if x64)
pacman -Syyu

# Install wicd stuff
pacman -S wireless_tools wpa_supplicant wpa_actiond dialog

# Install dependencies for my script
pacman -S git libnewt

# Reboot
exit
umount -R /mnt
reboot -> boot existing OS
arch login: root
Password: you've typed this earlier

# Add new user
useradd -m -g users -G wheel,games,audio,video,storage,power \
-s /bin/bash <username>
chfn <username>
passwd <username>
pacman -S sudo
visudo -> uncomment line with wheel
reboot -> login as a user

# Run my own script
mkdir repo
cd repo
git clone https://github.com/qeni/linux_stuff.git
chmod +x $HOME/repo/linux_stuff/arch-configurator.sh
./$HOME/repo/linux_stuff/arch-configurator.sh
# =================================================
