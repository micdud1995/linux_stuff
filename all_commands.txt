#========================================================
# Basics
mkdir
touch
cd - (back to previous folder)
ls -a (with hidden files)
ls -l (with files permissions)
l. (show only hidden files
cat a.txt b.txt c.txt >> abcd.txt - merge files
cp /path/from/file /path/where
mv /home/path/file /path/where
mv old_name new_name (changes name of file)
mv *.txt *.cpp (changes all files extensions)
pwd (prints working directory)
less /path/to/file (opens large file)
	arrows - moving
	q - end
tar -zxvf abc.tar.gz (unpack)
tar -jxvf abc.tar.bz2 (unpack)
tar -cvf archieve.tar.gz /path/to/dir/abc (pack)
rm /path/to/file (remove file)
rm -rf /path/to/dir (remove directory)
ncal (shows calendar)
date (shows date)
aptitude (shows menu with packages in categories)
aptitude show lxde (shows depends of package)
#========================================================

#========================================================
# Sysadmin
lsblk (shows mounted disks as a tree)
uptime 
hostname -I (shows IP address)
w (uptime & who)
free -h (free memory)
htop (ram & cpu consumption)
uname -a (all system's informations)
history (history of commands)
man xxx (shows manual of xxx command)
ps (shows processes)
ps -A (shows all processes)
ps -A | grep -i chrome (looks for process with chrome in name)
kill xxxx (kills process with xxxx pid)
pkill chrome (kills process with xxx name)
whereis bin (finds binary file)
df -h (all disks free spaces)
wall "Communicate for all users"
passwd (changing your password)
making alias	
	alias l='ls -a'
	unalias l

	alias cp='rsync -aP' (adds progress bar)
	unalias cp
chsh -s /bin/zsh (changes default shell)
#========================================================

#========================================================
# Counters
wc -l (Prints the number of lines in a file; wc - word count)
wc -w (prints the number of words in a file)
wc -c (Displays the count of bytes in a file)
wc -m (prints the count of characters from a file)
wc -L (prints only the length of the longest line in a file)
#========================================================

#========================================================
# Mount/format
dd if=/path/to/iso of=/dev/sdb && sync (sdb without number)
mkfs.ext4 /dev/sdb1 (formatting to ext4)
mounting usb
	lsblk
	su
	cd /dev
	mkdir usb
	mount /dev/sdb1 /dev/usb
	umount /dev/usb
#========================================================
md5sum file - checksum
reset (resets terminal)
chmod 761 abc.sh (owner=all, group=read and write, world=only execute)
	values: read=4, write=2, execute=1
find -name *.txt (always with -name - finds in folder and subfolders)
find -iname *.tXT (no difference small/big letters)
find ~ -empty (finds empty files)
find / -type f -size +100M (show all files greater than 100Mb)
find . -mtime +60 (show all files that are not modified int the last 60 days)
find . -mtime -2 (show files that are modified in the last 2 days)

find / -type f -name *.tar.gz -size +100M -exec ls -l ()\;
find / -type f -name *.tar.gz -size +100M -exec rm -f ()\;
(find, list, and delete all archives greater than 100M

find /home/user -type f -mtime +60 | xargs tar -cvf /tmp/`date '+%d%m%Y'_archive.tar`
(archive all the files that are not midified in the last 60 days)

grep word /path/to/file (finds word in file)
grep -i wOrD /path/to/file (no difference small/big letters)
grep michal /etc/passwd (show all lines matching michal in file
grep "^Nov 10" /.zsh_history (show all lines with this beginning)
grep "terminating.$" file (show all lines with this matching in the end)
grep -c "^$" file (show count of empty lines)
grep ".ello" file (show words with ello and one sign at the beginning)
#========================================================

#========================================================
# Programming
g++ *.cpp -o bin
./bin

javac program.java
java program
#========================================================

#========================================================
# Midnight Commander
Alt + . (Show/Hide hidden files)
#========================================================

#========================================================
# Network
ifconfig (with sudo - network interfaces)
ifconfig -a (all interfaces, even disabled)

ifconfig eth0 down (disable interface)
ifconfig eth0 up (enable interface)
#========================================================

#========================================================
# Output
xrandr (available outputs)
xrandr --output HDMI1 --off (off HDMI1 output)
xrandr --output HDMI1 --mode 1024x768 (changing resolution)
xrandr --output HDMI1 --auto (default settings)
xrandr --output HDMI1 --mode 1366x768
#========================================================

#========================================================
# Kernel compiling
1) download sources from kernel.org
2) unpack and cd into it
3) sudo aptitude install kernel-package libncurses5-dev fakeroot bzip2 build-essential gcc
4) cp /boot/config-`uname -r` .config
5) make menuconfig and load .config file and exit -  don't save(requires libncurses5-dev)
6) make-kpkg clean
7) fakeroot make-kpkg --initrd --append-to-version=-custom kernel_image kernel_headers
8) dpkg -i *.deb
9) reboot
10) uname -r
#========================================================

#========================================================
# Removing kernel installed from source
sudo rm -rf /lib/modules/kernel_version
sudo rm -f /boot/vmlinuz-kernel_version*
sudo rm -f /boot/initrd.img-kernel_version*
sudo rm -f /boot/config-kernel_version*
sudo rm -f /boot/System.map-kernel_version*
#========================================================

#========================================================
# Cron
crontab -l (list of jobs)
crontab -e (edit jobs of cron)
crontab -r (delete all jobs of cron)
* * * * * command to be executed
- - - - -
| | | | |
| | | | ----- Day of week (0 - 7) (Sunday=0 or 7)
| | | ------- Month (1 - 12)
| | --------- Day of month (1 - 31)
| ----------- Hour (0 - 23)
------------- Minute (0 - 59)

MAILTO="michal.dudek1995@gmail.com"
MAIL="" (disable mail's output)

crontab -e (editing config file)
crontab -l (shows content of crontab file) 
crontab -r (delete the content of crontab file)

or instead of "*" we can use strings:
@reboot (runs job on every start)
@hourly (runs job on round hours)
etc

Examples:

* * * * * echo "Hello World" >> ~/tmp/hello.txt (plik sam siÄ™ utworzy)

* * * * * tar -zcf /path/to/new/archive /path/to/file (tworzy archiwum z pliku/folderu)

#========================================================

#========================================================
# Vim
:! command (run command without exiting from vim)
:!! (run in vim last command)
#========================================================

#========================================================
# SSH
sudo aptitude install openssh-server
sudo iptables -I INPUT -p tcp --dport 22 -j ACCEPT
sudo /etc/init.d/ssh restart
ssh user@ip_number
export DISPLAY=:0 #if wanna to run GUI apps
...
exit
#========================================================

